{
  "name": "cptx",
  "displayName": "cptX 〉ChatGPT as Copilot",
  "description": "Use ChatGPT as your (aslmost)free Copilot",
  "version": "1.0.2",
  "publisher": "MaximSaplin",
  "icon": "images/icon.png",
  "engines": {
    "vscode": "^1.77.0"
  },
  "repository": {
    "url": "https://github.com/maxim-saplin/cptX"
  },
  "categories": [
    "Programming Languages",
    "Machine Learning",
    "Education",
    "Other"
  ],
  "keywords": [
    "chatgpt",
    "openai",
    "azure",
    "gpt4",
    "gpt3",
    "copilot",
    "flutter",
    "dart",
    "c#",
    "java",
    "javascript",
    "typescript",
    "python",
    "golang",
    "go",
    "ai",
    "code",
    "llm",
    "refactor",
    "assistant",
    "coding",
    "refactor",
    "explain",
    "test"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "cptX",
      "type": "object",
      "properties": {
        "cptx.apiProvider": {
          "type": "string",
          "order": 0,
          "enum": [
            "OpenAI (Gpt3.5)",
            "Azure (Gpt3.5 or Gpt4)"
          ],
          "default": "OpenAI (Gpt3.5)",
          "markdownDescription": "Choose the AI provider for the copilot. If Azure is selected you must provide model endpoint and deployment name"
        },
        "cptx.APIKey": {
          "order": 1,
          "type": "string",
          "markdownDescription": "OpenAI API key (see https://platform.openai.com/account/api-keys) OR Azure API key (see Azure API key, see https://learn.microsoft.com/en-us/azure/cognitive-services/openai/reference)"
        },
        "cptx.AzureEndpoint": {
          "order": 2,
          "type": "string",
          "markdownDescription": "Azure endpoint address, e.g. https://YOUR_RESOURCE_NAME.openai.azure.com (see https://learn.microsoft.com/en-us/azure/cognitive-services/openai/reference)"
        },
        "cptx.AzureDeploymentName": {
          "order": 3,
          "type": "string",
          "markdownDescription": "Azure deploymnet name, (see https://learn.microsoft.com/en-us/azure/cognitive-services/openai/reference)"
        },
        "cptx.ContextSize": {
          "order": 4,
          "default": 4096,
          "type": "number",
          "markdownDescription": "Model contxt/window size in tokens. E.g. gpt3.5 has default context size of 4096. The larger context is available to teh plugin, the more relevant info might be packed into request."
        }
      }
    },
    "commands": [
      {
        "command": "cptX.createOrRefactor",
        "title": "cptX 〉Create · Refactor"
      },
      {
        "command": "cptX.explainOrAsk",
        "title": "cptX 〉 Ask · Explain"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.77.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.39.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.2",
    "typescript": "^5.0.4",
    "webpack": "^5.81.0",
    "webpack-cli": "^5.0.2"
  },
  "dependencies": {
    "@azure/openai": "^1.0.0-beta.2",
    "@vscode/extension-telemetry": "^0.8.3",
    "js-tiktoken": "^1.0.7"
  }
}
